
services:
  db-app:
    container_name: db-app_container
    image: db-app:v1.0
    ports:
      - "${DATABASE_EXPOSE_PORT}:${DATABASE_PORT}"
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always
    networks:
      - writer-db-network
      - reader-db-network
  
  writer-app:
    container_name: writer-app_container
    image: writer-app:v1.0
    ports:
      - "${WRITER_EXPOSE_PORT}:${WRITER_PORT}"
    environment:
      DATABASE_HOST: ${DATABASE_HOST} 
      DATABASE_PORT: ${DATABASE_PORT} 
      DATABASE_USER: ${DATABASE_USER}   
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}    
      DATABASE_TABLE_NAME: ${DATABASE_TABLE_NAME}  
      WRITER_PORT: ${WRITER_PORT}
    depends_on:
      - db-app
    restart: on-failure:5
    networks:
      - writer-db-network

  reader-app:
    container_name: reader-app_container
    image: reader-app:v1.0
    ports:
      - "${READER_EXPOSE_PORT}:${READER_PORT}"
    environment:
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_TABLE_NAME: ${DATABASE_TABLE_NAME}
      READER_PORT: ${READER_PORT}
    depends_on:
      - db-app
    restart: on-failure:5
    networks:
      - reader-db-network

volumes:
  pgdata:

networks:
  writer-db-network:
    driver: bridge
    
  reader-db-network:
    driver: bridge